---
import { useTranslations } from '@/i18n';

type Props = {
  dropdownDirection?: 'down' | 'up';
};

const { t, resolvedLanguage } = useTranslations(Astro.url);

const is404 = /^\/404\/?$/.test(Astro.url.pathname);

const { dropdownDirection = 'down' } = Astro.props;
---

<div class="language-toggle-container relative">
  <button
    aria-label={t({
      en: 'Change Language',
      fr: 'Changer la langue'
    })}
    class="language-toggle flex items-center justify-center rounded-md p-2 hover:backdrop-brightness-95 disabled:cursor-not-allowed dark:text-gray-300 dark:hover:text-gray-100 dark:hover:backdrop-brightness-150"
    disabled={is404}
    type="button"
  >
    <span class="uppercase">{resolvedLanguage}</span>
    <svg
      class:list={['ml-1.5 h-4 w-4', dropdownDirection === 'up' && 'rotate-180']}
      xmlns="http://www.w3.org/2000/svg"
      fill="none"
      viewBox="0 0 24 24"
      stroke-width="1.5"
      stroke="currentColor"
    >
      <path stroke-linecap="round" stroke-linejoin="round" d="M19.5 8.25l-7.5 7.5-7.5-7.5"></path>
    </svg>
  </button>
  <div
    class:list={[
      'language-toggle-dropdown absolute hidden w-full rounded-md bg-white shadow-xl ring-1 ring-black/10dark:bg-gray-800',
      dropdownDirection === 'down' ? 'mt-1' : 'top-[-5.25rem]'
    ]}
  >
    <a
      class="block cursor-pointer p-2 text-center uppercase first:rounded-t-md last:rounded-b-md hover:backdrop-brightness-95 dark:hover:backdrop-brightness-150"
      href={new URL(Astro.url.href.replace(`/${resolvedLanguage}`, `/en`))}
    >
      en
    </a>
    <a
      class="block cursor-pointer p-2 text-center uppercase first:rounded-t-md last:rounded-b-md hover:backdrop-brightness-95 dark:hover:backdrop-brightness-150"
      href={new URL(Astro.url.href.replace(`/${resolvedLanguage}`, `/fr`))}
    >
      fr
    </a>
  </div>
</div>
<script>
  document.querySelectorAll('.language-toggle-container').forEach((containerElement) => {
    const toggle = containerElement.querySelector('.language-toggle')!;
    const dropdown = containerElement.querySelector('.language-toggle-dropdown')!;
    toggle.addEventListener('click', () => {
      dropdown.classList.toggle('hidden');
    });
  });
</script>
