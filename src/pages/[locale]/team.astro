---
import { getCollection } from 'astro:content';

import Heading from '@/components/Heading.astro';
import Headshot from '@/components/Headshot.astro';
import PageHeading from '@/components/PageHeading.astro';
import { useTranslations } from '@/i18n';
import Layout from '@/layouts/Layout.astro';
import type { CollectionEntry } from 'astro:content';

type CurrentTeamMember = Extract<CollectionEntry<'team'>['data'], { position: object }>;

const team = (await getCollection('team', ({ data }) => data.position)) as (CollectionEntry<'team'> & {
  data: CurrentTeamMember;
})[];

team.sort((a, b) => {
  if (a.data.seniority > b.data.seniority) {
    return 1;
  } else if (b.data.seniority > a.data.seniority) {
    return -1;
  }
  return 0;
});

export const getStaticPaths = () => {
  return [{ params: { locale: 'en' } }, { params: { locale: 'fr' } }];
};

const { resolvedLanguage, t } = useTranslations(Astro.url);
---

<Layout
  bilingual
  description={t({
    en: 'Meet the Douglas Neuroinformatics Platform team at the Douglas Research Centre. We provide cutting-edge informatics resources, technical support, and expertise to enable measurement-based care and research.',
    fr: "Rencontrez l'équipe du Douglas Neuroinformatics Platform au Centre de recherche Douglas. Nous fournissons des ressources informatiques de pointe, du soutien technique et de l'expertise pour permettre des soins et de la recherche fondés sur des mesures."
  })}
  title={t({
    en: 'Douglas Neuroinformatics Platform - Team',
    fr: "Douglas Neuroinformatics Platform - L'équipe"
  })}
>
  <PageHeading>
    {
      t({
        en: 'Meet Our Team',
        fr: 'Rencontrez notre équipe'
      })
    }
  </PageHeading>
  <ul class="grid gap-6 md:gap-8 xl:grid-cols-2" id="team-members-list">
    {
      team.map(({ data: { fullName, suffix, position, image, description } }) => (
        <li class="translate-y-6 opacity-0 transition-all duration-500 ease-in-out">
          <div class="relative grid h-full gap-8 rounded-md border border-gray-300 bg-gray-50 p-5 shadow-xs md:grid-cols-4 md:rounded-none md:border-none md:bg-inherit md:p-0 md:shadow-none xl:grid-cols-3 dark:border-gray-600 dark:bg-gray-800 md:dark:bg-inherit">
            <div class="absolute top-5 left-5 h-14 w-14 md:static md:flex md:h-auto md:w-auto md:items-center md:justify-center">
              <Headshot class="md:rounded-lg md:shadow-lg" src={image} alt={fullName} />
            </div>
            <div class="flex flex-col md:col-span-3 xl:col-span-2">
              <div class="mb-2 flex h-14 flex-col justify-between py-2.5 pl-[4.25rem] md:mb-0 md:py-1.5 md:pl-0">
                <Heading class="leading-none md:text-lg" variant="h4">
                  {`${fullName}${suffix ? `, ${suffix}` : ''}`}
                </Heading>
                <span class="text-sm leading-none font-semibold tracking-tight text-sky-700 md:text-base dark:text-sky-500 md:dark:text-sky-400">
                  {position[resolvedLanguage]}
                </span>
              </div>
              <p class="py-1.5 text-sm leading-tight font-normal text-gray-700 dark:text-gray-300">
                {description[resolvedLanguage]}
              </p>
            </div>
          </div>
        </li>
      ))
    }
  </ul>
  <script>
    const ul = document.getElementById('team-members-list')!;
    for (let i = 0; i < ul.children.length; i++) {
      const li = ul.children.item(i) as HTMLLIElement;
      setTimeout(() => {
        li.classList.replace('opacity-0', 'opacity-100');
        li.classList.replace('translate-y-6', 'translate-y-0');
      }, i * 100);
    }
  </script>
</Layout>
